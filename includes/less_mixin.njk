<span class="code-mixin-name">
.text-crop</span>(@line-height: <span class="code-line-height">1.2</span>, @top-adjustment: 0px, @bottom-adjustment: 0px) {
    @offset-top: max((<span class="code-top-measurement">0</span> + (@line-height - <span class="code-line-height">1.2</span>) * (<span class="code-size">36</span> / 2)), 0) / <span class="code-size">36</span>;
    @offset-bottom: max((<span class="code-bottom-measurement">0</span> + (@line-height - <span class="code-line-height">1.2</span>) * (<span class="code-size">36</span> / 2)), 0) / <span class="code-size">36</span>;

    <span class="code-property">line-height</span>: @line-height;

    <span class="code-selector">&::before,
    &::after</span> {
        <span class="code-property">content</span>: '';
        <span class="code-property">display</span>: block;
        <span class="code-property">height</span>: 0;
        <span class="code-property">width</span>: 0;
    }

    <span class="code-selector">&::before</span> {
        <span class="code-property">margin-bottom</span>: calc(unit(-@offset-top, em) ~"+" @top-adjustment);
    }

    <span class="code-selector">&::after</span> {
        <span class="code-property">margin-top</span>: calc(unit(-@offset-bottom, em) ~"+" @bottom-adjustment);
    }
}
<span class="code-comment">// Mixin generated at: http://text-crop.eightshapes.com

/* Usage Examples
    .my-level-1-heading-class {
        .text-crop; // Will use default line height of <span class="code-line-height">1.2</span>
        font-size: 48px;
        margin: 0 0 0 16px;
    }

    .my-level-2-heading-class {
        .text-crop; // Will use default line height of <span class="code-line-height">1.2</span>
        font-size: 32px; // Don't need to change any settings, will work with any font size automatically
        margin: 0 0 0 16px;
    }

    .my-body-copy-class {
        .text-crop(@line-height: 2); // Larger line height desired, set the line height via the mixin
        font-size: 16px;
    }

    // Sometimes depending on the font-size, the rendering, the browser, etc. you may need to tweak the output. 
    // You can adjust the top and bottom cropping when invoking the component using the $top-adjustment and $bottom-adjustment settings 
    
    .slight-adjustment-needed {
        .text-crop(@top-adjustment: -0.5px, @bottom-adjustment: 2px);
        font-size: 17px;
    }

    .dont-do-this {
        .text-crop;
        font-size: 16px;
        line-height: 3; // DO NOT set line height outside of the mixin, the mixin needs the line height value to calculate the crop correctly
    }
*/
</span>
