{% macro copy_code_button(target) %}
    <a href="#" class="es-code-snippet__copy-button" data-clipboard-target="{{ target }}">
        {{ icon(icon_name="clipboard", class="es-code-snippet__copy-button-icon") }}
        <span class="es-code-snippet__copy-button-text">Copy to Clipboard</span>
        <span class="es-code-snippet__copy-response">Press Ctrl + C to copy</span>
    </a>
{% endmacro %}

{% macro code_snippet() %}
        <div class="generated-code tool-section">
            <h2 class="tool-section__title">Mixin Code</h2> 
            <div class="es-tabs">
                <label class="es-tabs__label" for="scss">
                    <input type="radio" id="scss" name="style-preprocessor" class="es-tabs__label-input" checked>
                    <span class="es-tabs__label-text">
                        SCSS
                    </span>
                </label>
                <label class="es-tabs__label" for="less">
                    <input type="radio" id="less" name="style-preprocessor" class="es-tabs__label-input">
                    <span class="es-tabs__label-text">
                        LESS
                    </span>
                </label>
                <label class="es-tabs__label" for="stylus">
                    <input type="radio" id="stylus" name="style-preprocessor" class="es-tabs__label-input">
                    <span class="es-tabs__label-text">
                        Stylus
                    </span>
                </label>
            </div>
            
            <div id="style-preprocessor-scss" class="mixin-code-tab-pane">
                {{ copy_code_button("#scss-code") }}
                <pre>
                    <code id="scss-code">
<span class="code-keyword">@mixin</span> <span class="code-mixin-name">text-crop</span>($line-height: <span class="code-line-height">1.2</span>, $top-adjustment: 0px, $bottom-adjustment: 0px) {
    $offset-top: max((<span class="code-top-measurement">0</span> + ($line-height - <span class="code-line-height">1.2</span>) * (<span class="code-size">60</span> / 2)), 0) / <span class="code-size">60</span>;
    $offset-bottom: max((<span class="code-bottom-measurement">0</span> + ($line-height - <span class="code-line-height">1.2</span>) * (<span class="code-size">60</span> / 2)), 0) / <span class="code-size">60</span>;

    <span class="code-property">line-height</span>: $line-height;

    <span class="code-selector">&::before,
    &::after</span> {
        <span class="code-property">content</span>: '';
        <span class="code-property">display</span>: block;
        <span class="code-property">height</span>: 0;
        <span class="code-property">width</span>: 0;
    }

    <span class="code-selector">&::before</span> {
        <span class="code-property">margin-bottom</span>: calc(-#{$offset-top}em + #{$top-adjustment});
    }

    <span class="code-selector">&::after</span> {
        <span class="code-property">margin-top</span>: calc(-#{$offset-bottom}em + #{$bottom-adjustment});
    }
}
<span class="code-comment">// Mixin generated at: http://text-crop.eightshapes.com

/* Usage Example
    .my-level-1-heading-class {
        @include text-crop; // Will use default line height of <span class="code-line-height">1.2</span>
        font-size: 48px;
        margin: 0 0 0 16px;
    }

    .my-level-2-heading-class {
        @include text-crop; // Will use default line height of <span class="code-line-height">1.2</span>
        font-size: 32px; // Don't need to change any settings, will work with any font size automatically
        margin: 0 0 0 16px;
    }

    .my-body-copy-class {
        @include text-crop($line-height: 2); // Larger line height desired, set the line height via the mixin
        font-size: 16px;
    }

    .dont-do-this {
        @include text-crop;
        font-size: 16px;
        line-height: 3; // DO NOT set line height outside of the mixin, the mixin needs the desired line height to calculate the crop correctly
    }
*/
</span>
                    </code>
                </pre>
            </div>

            <div id="style-preprocessor-less" class="mixin-code-tab-pane">
                {{ copy_code_button("#less-code") }}

                <pre>
                    <code id="less-code">
.cap-aligned-line-height(@line-height: <span class="code-line-height">1.2</span>) {

    @offset-top = max((<span class="code-top-measurement">0</span> + ($lineHeight - <span class="code-line-height">1.2</span>) * (<span class="code-size">60</span> / 2)), 0) / <span class="code-size">60</span>;
    @offset-bottom = max((<span class="code-bottom-measurement">0</span> + ($lineHeight - <span class="code-line-height">1.2</span>) * (<span class="code-size">60</span> / 2)), 0) / <span class="code-size">60</span>;

    line-height: @line-height;

    &::before,
    &::after {
        content: '';
        display: block;
        height: 0;
        width: 0;
    }

    &::before {
        margin-bottom: -(@offset-top)em;
    }

    &::after {
        margin-top: -(@offset-bottom)em;
    }
}
                    </code>
                </pre>
            </div>

            <div id="style-preprocessor-stylus" class="mixin-code-tab-pane">
                {{ copy_code_button("#stylus-code") }}

                <pre>
                    <code id="stylus-code">
cap-aligned-line-height($line-height = <span class="code-line-height">1.2</span>) {
    $offset-top = max((<span class="code-top-measurement">0</span> + ($lineHeight - <span class="code-line-height">1.2</span>) * (<span class="code-size">60</span> / 2)), 0) / <span class="code-size">60</span>;
    $offset-bottom = max((<span class="code-bottom-measurement">0</span> + ($lineHeight - <span class="code-line-height">1.2</span>) * (<span class="code-size">60</span> / 2)), 0) / <span class="code-size">60</span>;

    line-height: $line-height;

    &::before,
    &::after {
        content: '';
        display: block;
        height: 0;
        width: 0;
    }

    &::before {
        margin-bottom: -($offset-top)em;
    }

    &::after {
        margin-top: -($offset-bottom)em;
    }
}
                    </code>
                </pre>
            </div>
        </div>
{% endmacro %}
